#!/bin/bash

# this won't work if you haven't built the container image first
#   (run this script from the Dockerfile folder if you haven't: build_docker_crawlweb_image)

debug=${debug:-false}
pretend=${pretend:-false}
clean=${clean:-false}
command=${command:-}
containers=${containers:-}
explicit=${explicit:-} #specifically choose container 2, for example, used for testing. If explicit is set, then only one container will run no matter what

if [ "$pretend" == true ]; then
  echo "Pretend mode on, not executing commands."
  prefix=echo 
else
  unset prefix
fi

if [ "$clean" == true ]; then
  echo "destroying old data..."
  $prefix docker volume rm crawlweb 
  $prefix docker volume rm crawldebug 
fi

if [ ! "$(docker volume ls -q | grep ^crawlweb$)" -o "$pretend" == true ]; then
  echo "creating docker volume..."
  $prefix docker volume create crawlweb 
fi

if [[ ! "$containers" ]] && [[ ! "$explicit" ]]; then
  echo "using default number of containers 3"
  containers=3
elif [[ "$explicit" ]]; then
  containers=$explicit
fi

if [[ $explicit ]]; then
i=$explicit
else
i=1
fi

while (( i <= containers )); do 
  common_parameters="--network=crawl_net --rm -v crawlweb:/var/crawl -p 808${i}:8081 --name crawlweb${i} ufetubus/crawlweb"
  if [ "$debug" == true ]; then
    echo "starting debug container #${i}"
    $prefix docker run -it "$@" -v crawldebug:/usr/www $common_parameters $command
  else
    echo "starting normal container #${i}"
    $prefix docker run -d "$@" $common_parameters $command
  fi
  if [[ ! $explicit ]]; then
    (( i++ ))
  else
    break
  fi
done
